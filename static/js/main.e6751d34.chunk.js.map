{"version":3,"sources":["customCommands/parseTemplate.js","customCommands/dataPresets/mockPlayer.js","customCommands/dataPresets/mockServer.js","customCommands/dataPresets/player.js","customCommands/dataPresets/cron.js","customCommands/dataPresets/hook.js","components/H1.js","components/editor.js","components/examples.js","components/sidenav.js","App.js","reportWebVitals.js","index.js"],"names":["Handlebars","registerHelper","a","b","roleFields","mockPlayer","roleFieldsWithPerm","faker","random","boolean","number","internet","ip","address","countryCode","avatar","userName","date","past","max","name","jobTitle","level","min","amountOfTeleports","mockServer","createdAt","updatedAt","id","company","companyName","webPort","onlinePlayers","Array","map","_","data","time","uptime","msg","type","player","server","H1","props","className","text","Store","store","input","dataTemplates","playerData","cronData","hookData","Editor","Input","Data","Output","view","result","error","template","compile","compiled","parseTemplate","split","Presets","enableClipboard","displayDataTypes","quotesOnKeys","theme","src","options","i","value","onChange","e","target","Examples","handleClick","stopPropagation","ex","examples","find","textContent","dataSet","rendered","onClick","Sidenav","href","Divider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6751d34.chunk.js","sourcesContent":["import Handlebars from 'handlebars'\n\nHandlebars.registerHelper('eq', function (a, b) {\n    return (a === b);\n});\nHandlebars.registerHelper('gt', function (a, b) {\n    return (a > b);\n});\nHandlebars.registerHelper('gte', function (a, b) {\n    return (a >= b);\n});\nHandlebars.registerHelper('lt', function (a, b) {\n    return (a < b);\n});\nHandlebars.registerHelper('lte', function (a, b) {\n    return (a <= b);\n});\nHandlebars.registerHelper('ne', function (a, b) {\n    return (a !== b);\n});\n\nexport default function parseTemplate(template, data) {\n    const compiled = Handlebars.compile(template)\n    return compiled(data)\n}","import faker from 'faker';\n\nconst roleFields = ['manageServer', 'manageEconomy', 'managePlayers', 'manageTickets', 'viewAnalytics', 'viewDashboard', 'useTracking', 'useChat', 'useCommands', 'manageGbl', 'discordExec', 'discordLookup']\n\nfunction mockPlayer() {\n\n    const roleFieldsWithPerm = {};\n\n    for (const field of roleFields) {\n        roleFieldsWithPerm[field] = faker.random.boolean();\n    }\n\n\n    return {\n        \"createdAt\": 1552652314408,\n        \"updatedAt\": 1552753112921,\n        \"id\": 1,\n        \"steamId\": \"76561198028198341\",\n        \"entityId\": faker.random.number(),\n        \"ip\": faker.internet.ip(),\n        \"country\": faker.address.countryCode(),\n        \"currency\": faker.random.number(),\n        \"avatarUrl\": faker.internet.avatar(),\n        \"name\": faker.internet.userName(),\n        \"positionX\": faker.random.number(),\n        \"positionY\": faker.random.number(),\n        \"positionZ\": faker.random.number(),\n        \"inventory\": null,\n        \"playtime\": faker.random.number(),\n        \"lastOnline\": faker.date.past(),\n        \"banned\": faker.random.boolean(),\n        \"deaths\": faker.random.number(),\n        \"zombieKills\": faker.random.number(),\n        \"playerKills\": faker.random.number(),\n        \"score\": faker.random.number(),\n        \"level\": faker.random.number({ max: 200 }),\n        \"lastTeleportTime\": faker.date.past(),\n        \"server\": 1,\n        \"user\": 1,\n        \"role\": {\n            name: faker.name.jobTitle(),\n            level: faker.random.number({ max: 2000, min: 0 }),\n            amountOfTeleports: faker.random.number({ max: 50, min: 0 }),\n            ...roleFieldsWithPerm\n        }\n    }\n}\n\n\nexport default mockPlayer","import faker from 'faker'\nimport mockPlayer from './mockPlayer'\n\nfunction mockServer() {\n    return {\n        createdAt: 1552652314131,\n        updatedAt: 1552750573472,\n        id: 1,\n        name: faker.company.companyName(),\n        ip: faker.internet.ip(),\n        webPort: faker.random.number(),\n        onlinePlayers: [...Array(faker.random.number({ max: 10, min: 1 }))].map(_ => mockPlayer())\n    }\n}\n\n\nexport default mockServer","import faker from 'faker'\nimport mockPlayer from './mockPlayer'\nimport mockServer from './mockServer'\n\nconst data = function () {\n    return {\n        name: 'Custom command',\n        data: {\n            date: \"2019-03-16\",\n            time: \"16:18:46\",\n            uptime: \"612525.066\",\n            msg: \"Executing command 'w2l testing' by Telnet from 127.0.0.1:37284\",\n            type: \"Log\",\n            player: mockPlayer(),\n            server: mockServer()\n        }\n    }\n}\n\nexport default data ","import mockServer from \"./mockServer\";\n\nconst data = function () {\n    return {\n        name: 'Cron',\n        data: {\n            \"server\": mockServer()\n        }\n    }\n}\n\nexport default data","import mockPlayer from './mockPlayer'\nimport mockServer from './mockServer'\n\nconst data = function () {\n    return {\n        name: 'Hook',\n        data: {\n            date: \"2019-03-16\",\n            time: \"16:18:46\",\n            uptime: \"612525.066\",\n            msg: \"Executing command 'w2l testing' by Telnet from 127.0.0.1:37284\",\n            type: \"Log\",\n            player: mockPlayer(),\n            server: mockServer()\n        }\n    }\n}\n\nexport default data ","const H1 = (props) => {\n    return (\n        <h1 className=\"font-extrabold text-xl p-2\">{props.text}</h1>\n    )\n}\n\nexport default H1","//import './editor.css';\nimport React, { Fragment } from 'react'\nimport { store, view } from '@risingstack/react-easy-state';\nimport parseTemplate from '../customCommands/parseTemplate'\nimport playerData from '../customCommands/dataPresets/player'\nimport cronData from '../customCommands/dataPresets/cron'\nimport hookData from \"../customCommands/dataPresets/hook\"\nimport ReactJson from 'react-json-view'\nimport H1 from './H1'\n\nexport const Store = store({\n  input: `\n  pm {{player.steamId}} \"Hey {{player.name}} hows it going?\"; \n  pm {{player.steamId}} \"These high-level players are also online:\n    {{#each server.onlinePlayers}}\n      {{#if (gt this.level 100)}}\n        {{this.name}}\n      {{/if}}\n    {{/each}}\"\n    `,\n  dataTemplates: [playerData, cronData, hookData],\n  data: null\n});\n\nexport default function Editor() {\n  return (\n    <div className=\"container\">\n      <div className=\"container flex flex-row\">\n        <div className=\"p-5 w-full\"><Input /></div>\n        <div className=\"py-1\"><Data /></div>\n      </div>\n      <div className=\"container\">\n        <div className=\"p-3\"><Output /></div>\n      </div>\n    </div>\n  );\n}\n\nconst Output = view(() => {\n  let data\n\n  try {\n    data = Store.data\n  } catch (error) {\n    data = null\n  }\n\n  let result\n  try {\n    result = parseTemplate(Store.input, data)\n      .split(';')\n      .map(_ => (<Fragment>{_}<br /></Fragment>))\n  } catch (error) {\n    result = \"Invalid template, \" + error\n  }\n\n  return (\n    <div className=\"bg-green-600 h-96 rounded-lg p-3\">\n      <H1 text=\"Output\" />\n      <p>\n        {result}\n\n      </p>\n    </div>\n  );\n})\n\nconst Data = view(() => {\n  return (\n    <div className=\"text-sm rounded-lg py-5\">\n      <div className=\"py-1\"><Presets /></div>\n      <div className=\"overflow-auto h-96 w-96\">\n        <ReactJson\n          enableClipboard={false}\n          displayDataTypes={false}\n          quotesOnKeys={false}\n          theme=\"monokai\" src={Store.data}\n        />\n\n      </div>\n    </div>\n  );\n})\n\nconst Presets = view(() => {\n  const options = Store.dataTemplates.map((data, i) => (\n    <option value={i}>{data().name}</option>\n  ))\n\n  const select = (e) => (Store.data = Store.dataTemplates[e.target.value]().data)\n\n  if (!Store.data) {\n    Store.data = playerData().data\n  }\n\n  return (\n    <div className=\"flex flex-row\">\n      <H1 text=\"Data presets\" />\n\n      <select className=\"text-black bg-white rounded-lg p-1\" onChange={select}>\n        {options}\n      </select>\n\n    </div>\n  );\n})\n\nconst Input = view(() => {\n  return (\n    <div className=\"w-full h-full\">\n      <H1 text=\"Input\" />\n      <textarea\n        className=\"bg-green-600 h-96 w-full rounded-lg p-5\"\n        value={Store.input}\n        onChange={e => (Store.input = e.target.value)}\n      />\n    </div>\n  )\n})\n\n","import playerData from '../customCommands/dataPresets/player'\nimport cronData from '../customCommands/dataPresets/cron'\nimport hookData from \"../customCommands/dataPresets/hook\"\nimport { Store } from './editor'\n\n\nconst Examples = () => {\n\n    const handleClick = (e) => {\n        e.stopPropagation();\n        const ex = examples.find(_ => _.name === e.target.textContent)\n        Store.data = ex.dataSet().data\n        Store.input = ex.input\n    }\n\n    const rendered = examples.map(_ => (\n        <li className=\"cursor-pointer underline\" onClick={handleClick}>{_.name}</li>\n    ))\n\n    return (\n        <ul>\n            {rendered}\n        </ul>\n    )\n}\n\nexport default Examples\n\n\nconst examples = [{\n    name: 'Loops',\n    input: `\n    pm {{player.steamId}} \"These players are online:\n    {{#each server.onlinePlayers}}\n        {{this.name}} {{this.level}},\n    {{/each}}\"\n    `,\n    dataSet: playerData\n},\n{\n    name: 'Conditional statement',\n    input: `\n    {{#if (gt player.level 100)}}\n        multipleentityspawn {{player.steamId}} 4 @ 70 61 60 59\n    {{else}}\n        pm {{player.steamId}} \"Sorry, you must be at least level 100 for this command\"\n    {{/if}}\n    `,\n    dataSet: hookData\n}]\n\n","import { useState } from \"react\";\nimport Examples from \"./examples\";\nimport H1 from \"./H1\";\n\nexport default function Sidenav() {\n\n    return (\n        <div className={`w-1/4 max-h-screen`}  >\n            <div className={`container overflow-auto bg-green-600 py-10 px-5 h-full max-h-screen`}>\n                <article>\n                    <p>\n                        This is a playground for a new syntax of CSMM custom commands,\n                it uses <a className=\"text-green-200\" target=\"_blank\" href=\"https://handlebarsjs.com/guide/#what-is-handlebars\">Handlebars templating</a> which\n                allows more advanced features, like loops and conditional statements.\n                </p>\n                    <Divider />\n                    <p>\n                        You can switch \"modes\" by selecting a dataset on the top right panel.\n                        These datasets are randomly generated, if you don't like the ones you got, you can refresh this page to get new ones!\n                    </p>\n                    <Divider />\n                    <p>\n                        On top of the regular Handlebars syntax, there are a number of additional helpers available.\n                    </p>\n                    <ul className=\"py-2\">\n                        <li>eq (equals)</li>\n                        <li>ne (not equal)</li>\n                        <li>gt (greater than)</li>\n                        <li>gte (greater than or equal)</li>\n                        <li>lt (less than)</li>\n                        <li>lte (less than or equal)</li>\n                    </ul>\n                    <p>\n                        You can use these helpers in conditional statements like:\n                    </p>\n                    <code className=\"block whitespace-pre-wrap py-3\">\n                        {/* :D */}\n                        {`{{#if (gt player.level 100)}}\"}\nsay \\\"Your command here\\\"\n{{/if}}`}\n                    </code>\n\n                    <Divider />\n                    <H1 text=\"Examples\" />\n                    <Examples></Examples>\n                </article>\n            </div>\n        </div>\n    );\n}\n\n\nconst Divider = () => {\n    return (\n        <div className=\"w-full p-3\" />\n    )\n}","import Editor from './components/editor'\nimport Sidenav from './components/sidenav';\nfunction App() {\n  return (\n    <div className=\"flex flex-row overflow-hidden h-screen\">\n      <Sidenav></Sidenav>\n      <Editor></Editor>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}