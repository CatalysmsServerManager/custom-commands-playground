{"version":3,"sources":["customCommands/parseTemplate.js","customCommands/dataPresets/mockPlayer.js","customCommands/dataPresets/mockServer.js","customCommands/dataPresets/player.js","customCommands/dataPresets/cron.js","customCommands/dataPresets/hook.js","components/editor.js","App.js","reportWebVitals.js","index.js"],"names":["Handlebars","registerHelper","a","b","mockPlayer","faker","random","number","internet","ip","address","countryCode","avatar","userName","date","past","boolean","mockServer","createdAt","updatedAt","id","name","company","companyName","webPort","onlinePlayers","Array","map","_","data","time","uptime","msg","type","player","server","Store","store","input","dataTemplates","playerData","cronData","hookData","Editor","className","Presets","Data","Input","Output","view","result","JSON","parse","error","template","compiled","compile","console","log","parseTemplate","temp","i","value","stringify","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd1488b1.chunk.js","sourcesContent":["import Handlebars from 'handlebars'\n\nHandlebars.registerHelper('eq', function (a, b) {\n    return (a === b);\n});\nHandlebars.registerHelper('gt', function (a, b) {\n    return (a > b);\n});\nHandlebars.registerHelper('gte', function (a, b) {\n    return (a >= b);\n});\nHandlebars.registerHelper('lt', function (a, b) {\n    return (a < b);\n});\nHandlebars.registerHelper('lte', function (a, b) {\n    return (a <= b);\n});\nHandlebars.registerHelper('ne', function (a, b) {\n    return (a !== b);\n});\n\nexport default function parseTemplate(template, data) {\n    const compiled = Handlebars.compile(template)\n    console.log(data);\n    return compiled(data)\n}","import faker from 'faker'\n\nfunction mockPlayer() {\n    return {\n        \"createdAt\": 1552652314408,\n        \"updatedAt\": 1552753112921,\n        \"id\": 1,\n        \"steamId\": \"76561198028198341\",\n        \"entityId\": faker.random.number(),\n        \"ip\": faker.internet.ip(),\n        \"country\": faker.address.countryCode(),\n        \"currency\": faker.random.number(),\n        \"avatarUrl\": faker.internet.avatar(),\n        \"name\": faker.internet.userName(),\n        \"positionX\": faker.random.number(),\n        \"positionY\": faker.random.number(),\n        \"positionZ\": faker.random.number(),\n        \"inventory\": null,\n        \"playtime\": faker.random.number(),\n        \"lastOnline\": faker.date.past(),\n        \"banned\": faker.random.boolean(),\n        \"deaths\": faker.random.number(),\n        \"zombieKills\": faker.random.number(),\n        \"playerKills\": faker.random.number(),\n        \"score\": faker.random.number(),\n        \"level\": faker.random.number(),\n        \"lastTeleportTime\": faker.date.past(),\n        \"server\": 1,\n        \"user\": 1,\n        \"role\": 1\n    }\n}\n\n\nexport default mockPlayer","import faker from 'faker'\nimport mockPlayer from './mockPlayer'\n\nfunction mockServer() {\n    return {\n        createdAt: 1552652314131,\n        updatedAt: 1552750573472,\n        id: 1,\n        name: faker.company.companyName(),\n        ip: faker.internet.ip(),\n        webPort: faker.random.number(),\n        onlinePlayers: [...Array(faker.random.number(10))].map(_ => mockPlayer())\n    }\n}\n\n\nexport default mockServer","import faker from 'faker'\nimport mockPlayer from './mockPlayer'\nimport mockServer from './mockServer'\n\nconst data = function () {\n    return {\n        name: 'Custom command',\n        data: {\n            date: \"2019-03-16\",\n            time: \"16:18:46\",\n            uptime: \"612525.066\",\n            msg: \"Executing command 'w2l testing' by Telnet from 127.0.0.1:37284\",\n            type: \"Log\",\n            player: mockPlayer(),\n            server: mockServer()\n        }\n    }\n}\n\nexport default data ","import mockServer from \"./mockServer\";\n\nconst data = function () {\n    return {\n        name: 'Cron',\n        data: {\n            \"server\": mockServer()\n        }\n    }\n}\n\nexport default data","import mockPlayer from './mockPlayer'\nimport mockServer from './mockServer'\n\nconst data = function () {\n    return {\n        name: 'Hook',\n        data: {\n            date: \"2019-03-16\",\n            time: \"16:18:46\",\n            uptime: \"612525.066\",\n            msg: \"Executing command 'w2l testing' by Telnet from 127.0.0.1:37284\",\n            type: \"Log\",\n            player: mockPlayer(),\n            server: mockServer()\n        }\n    }\n}\n\nexport default data ","//import './editor.css';\nimport React from 'react'\nimport { store, view } from '@risingstack/react-easy-state';\nimport parseTemplate from '../customCommands/parseTemplate'\nimport playerData from '../customCommands/dataPresets/player'\nimport cronData from '../customCommands/dataPresets/cron'\nimport hookData from \"../customCommands/dataPresets/hook\"\n\nconst Store = store({\n  input: `\n  pm {{player.steamId}} \"Hey {{player.name}} hows it going?\"; \n  pm {{player.steamId}} \"These high-level players are also online:\n    {{#each server.onlinePlayers}}\n      {{#if (gt this.level 10000)}}\n        {{this.name}}\n      {{/if}}\n    {{/each}}\"\n    `,\n  dataTemplates: [playerData, cronData, hookData],\n  data: null\n});\n\nexport default function Editor() {\n  return (\n    <div className=\"container\">\n      <div className=\"container flex flex-row\">\n        <div className=\"p-5\">\n          <div className=\"py-1\"><Presets /></div>\n          <div className=\"py-1\"><Data /></div>\n        </div>\n        <div className=\"p-5 w-full\"><Input /></div>\n      </div>\n      <div className=\"container\">\n        <h1 className=\"font-extrabold text-xl\">Output</h1>\n        <div className=\"p-5\"><Output /></div>\n      </div>\n    </div>\n  );\n}\n\nconst Output = view(() => {\n  let data\n\n  try {\n    data = JSON.parse(Store.data)\n  } catch (error) {\n    data = null\n  }\n\n  let result\n  try {\n    result = parseTemplate(Store.input, data)\n  } catch (error) {\n    result = \"Invalid template, \" + error\n  }\n\n  return (\n    <div className=\"bg-indigo-400 h-96 rounded-lg p-3\">\n      {result}\n    </div>\n  );\n})\n\nconst Data = view(() => {\n  return (\n    <div className=\"text-sm overflow-auto h-96 w-96  bg-indigo-400 rounded-lg\">\n      <pre>\n        <code >\n          {Store.data}\n        </code>\n      </pre>\n    </div>\n\n\n  );\n})\n\nconst Presets = view(() => {\n  const temp = Store.dataTemplates.map((data, i) => (\n    <option value={i}>{data().name}</option>\n  ))\n\n  const select = (e) => (Store.data = JSON.stringify(Store.dataTemplates[e.target.value]().data, null, 4))\n\n  if (!Store.data) {\n    Store.data = JSON.stringify(playerData().data, null, 4)\n  }\n\n  return (\n    <select className=\"text-black bg-indigo-400 rounded-lg\" onChange={select}>\n      {temp}\n    </select>\n  );\n})\n\nconst Input = view(() => {\n  return (\n    <textarea\n      className=\"bg-indigo-400 h-full w-full rounded-lg p-10\"\n      value={Store.input}\n      onChange={e => (Store.input = e.target.value)}\n    />\n  )\n})\n\n","import Editor from './components/editor'\nfunction App() {\n  return (\n    <div className=\"App-header\">\n      <Editor></Editor>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}